---
- hosts: "{{ given_host | default('localhost') }}"
  vars:
    nodesetup: /tmp/node_setup.sh
    gituser: user
    gitemail: ""
    font: 'MigMix 1M 16'
    font_monospace: 'Ricty Diminished Regular 15'
    font_titlebar: 'Migu 2M Bold 14'
    theme_window_borders: 'mint-x-mod'
    theme_icons: 'oxygen'
    theme_controls: 'Mint-Y-Dark-Blue'
    theme_mouse_pointer: 'DMZ-White'
    theme_desktop: 'Modern Mint Dark'
    downloads: /home/{{ansible_user_id}}/Downloads
    android_studio_url: https://dl.google.com/dl/android/studio/ide-zips/2.3.3.0
    android_studio_name: android-studio-ide-162.4069837-linux.zip
    android_studio_checksum: 1383cfd47441e5f820b6257a1bdd683e0e980bc76c7f2027ef84dc2e6ad2f17f
    android_studio_parentdir: /usr/local/
    android_studio_dir: android-studio
  become: no
  tasks:
#
# Network Manager disable
# http://unix.stackexchange.com/questions/215371/linux-network-stops-functioning-after-random-time-wired
#
  - name: disable service network-manager
    service: name=network-manager state=stopped enabled=no
    become: true
# OS will break becouse of this
# - name: uninstall packages
#   apt: name={{ item }} state=absent
#   with_items:
#     - network-manager
#   become: true
  - name: add "{{ansible_user_id}}" into group netdev
    user:
      name: "{{ansible_user_id}}"
      groups: netdev
      append: yes
    become: true
  - name: install package wicd
    apt: name={{ item }} update_cache=yes state=latest
    with_items:
      - wicd
    become: true
    when: not ansible_check_mode
#
# wicd Settings
#
  - name: start wicd
    service: name=wicd state=running enabled=yes
    become: true

#
# Dotfiles
#
  - name: download dotfiles
    git:
      repo: https://gist.githubusercontent.com/whateverjp/6ea3445379a6cdf87037c1be97ef7b16
      dest: ~/Documents/.dotfiles
  - name: deploy dotfiles
    command: sh ~/Documents/.dotfiles/deploy.sh
  - name: .vimperator option files
    git:
      repo: https://github.com/o2346/.vimperator
      dest: ~/.vimperator
  - name: copy .tmux.pd.conf
    copy: >
      src=./.tmux.pd.conf
      dest=~/

#
# Get rid of the keyring, annoying
#
  - name: Get rid of the keyring, annoying
    apt: name={{ item }} state=absent
    with_items:
      - gnome-keyring
    become: true

#
# Desktop Themes
#
  - name: create ~/.themes directory if it doesn't exist
    file:
      path: ~/.themes
      state: directory
      mode: 0755
  - name: desktop themes
    unarchive: src={{ item }} dest=~/.themes copy=no
    with_items:
      # BlackMint
      - https://cinnamon-spices.linuxmint.com/uploads/themes/IQ3Q-WIFH-A9V3.zip
      # Hacktivist 1.4
      - https://cinnamon-spices.linuxmint.com/uploads/themes/5UKU-H6JI-G3O6.zip
      # Mint-X-Dark
      - https://cinnamon-spices.linuxmint.com/uploads/themes/8ZA5-UIX7-QXJ7.zip
      # mint-x-mod
      - https://cinnamon-spices.linuxmint.com/uploads/themes/JBT7-9J4S-EAUH.zip
      # Mint-Y-Gray
      - https://cinnamon-spices.linuxmint.com/uploads/themes/M9WI-K8ME-QKAK.zip
      # Mint-Y-Yltra-Dark
      - https://cinnamon-spices.linuxmint.com/uploads/themes/PH79-PQF1-TYRD.zip
      # Mint Y Dark Blue
      - https://cinnamon-spices.linuxmint.com/uploads/themes/W24H-LL4V-VPK7.zip
      # Modern Mint Dark 1
      - https://cinnamon-spices.linuxmint.com/uploads/themes/AELJ-LXG0-O7NW.zip
  - name: Theme - Window borders
    command: gsettings set org.cinnamon.desktop.wm.preferences theme "{{ theme_window_borders }}"
  - name: Theme - Icons
    command: gsettings set org.cinnamon.desktop.interface icon-theme "{{ theme_icons }}"
  - name: Theme - Controls
    command: gsettings set org.cinnamon.desktop.interface gtk-theme "{{ theme_controls }}"
  - name: Theme - Mouse Pointer
    command: gsettings set org.cinnamon.desktop.interface cursor-theme "{{ theme_mouse_pointer }}"
  - name: Theme - Desktop
    command: gsettings set org.cinnamon.theme name "{{ theme_desktop }}"
  - name: list themes
    command: ls ~/.themes
    register: themes
#
# Desktop Themes
#
  - name: Theme - Window borders
    command: gsettings set org.cinnamon.desktop.wm.preferences theme "{{ theme_window_borders }}"
  - name: Theme - Icons
    command: gsettings set org.cinnamon.desktop.interface icon-theme "{{ theme_icons }}"
  - name: Theme - Controls
    command: gsettings set org.cinnamon.desktop.interface gtk-theme "{{ theme_controls }}"
  - name: Theme - Mouse Pointer
    command: gsettings set org.cinnamon.desktop.interface cursor-theme "{{ theme_mouse_pointer }}"
  - name: Theme - Desktop
    command: gsettings set org.cinnamon.theme name "{{ theme_desktop }}"
  - name: list themes
    command: ls ~/.themes
    register: themes
#  - name: debug result var
#    debug: var=themes
  - name: font size
    replace: >-
      dest='~/.themes/{{ item }}/cinnamon/cinnamon.css'
      regexp='font-size.+$'
      replace='font-size: 12pt;'
    with_items: " {{themes.stdout_lines}} "
    when: not ansible_check_mode
  - name: font family
    replace: >-
      dest='~/.themes/{{ item }}/cinnamon/cinnamon.css'
      regexp='font-family.+$'
      replace='font-family: MigMix 1C;'
    with_items: " {{themes.stdout_lines}} "
    when: not ansible_check_mode

# TODO Make active window font punctuate
# https://www.google.co.jp/search?safe=off&num=16&q=mint+active+window+cinnamon+-matome.naver.jp+-cookpad.com+-itpro.nikkeibp.co.jp+-rakuten.co.jp+-weblio.jp
# It requires to modify cinnamon.css and a little complicated

#
# Chomium setting ( gave up )

#
# Scripts
#
  - name: copy scrpts to /usr/local/bin
    copy: >
      src=./bin/
      dest=/usr/local/bin
      mode=755
    become: true

#
# apt
# https://www.ubuntulinux.jp/ubuntu/mirrors
# how to modify url
# https://note.mu/junf/n/nc710a82cad00
# TODO: not to upload local file, just replace urls
  - name: apt source list
    copy: >
      src=./sources.list
      dest=/etc/apt/sources.list
      mode=0644
    become: yes

#
# fcitx mozc
#
  - name: install ime, fcitx mozc
    apt: name={{ item }} state=installed update_cache=yes install_recommends=yes
    with_items:
      - fcitx
      - fcitx-mozc
    become: true
    when: not ansible_check_mode
  - name: set fcitx as default, restarting is required
    command: im-config -n fcitx
    when: not ansible_check_mode

#
# Node.js Preinstallation
#
  - name: download preinstaller of nodejs
    get_url:
      url: https://deb.nodesource.com/setup_10.x
      dest: "{{nodesetup}}"
      mode: 0665
  - name: preinstall nodejs
    command: bash -E "{{nodesetup}}"
    become: true
    notify: delete node_setup

#
# main apps
#
  - name: uninstall packages
    apt: name={{ item }} state=absent
    with_items:
      - ufw
    become: true
  - name: install packages
    apt: name={{ item }} update_cache=yes state=latest
    with_items:
      - vim-gnome
      - emacs
      - nodejs
      - awscli
      - htop
      - nkf
      - tmux
      - xsel
      # https://sites.google.com/site/linuxnomemo/mint-use/virtualbox
      - virtualbox
      - virtualbox-qt
      - virtualbox-dkms
      - virtualbox-guest-additions-iso
      - fontforge
      - fonts-ricty-diminished
      - fonts-migmix
      - filezilla
      - keepassx
      - vlc
      - k3b
      - zsh
      - ffmpeg
      - mp3splt
      #https://detail.chiebukuro.yahoo.co.jp/qa/question_detail/q11104779381
      #- wine
      - tig
      - chromium-browser
      - clang #for NeoBundle
      - ssh
      - sshpass
      - firewall-applet #replacement of ufw
      - whois
      - tree
      #You are using pip version 8.1.1, however version 9.0.1 is available.
      #You should consider upgrading via the 'pip install --upgrade pip' command.
      - python-pip
      # pip broken problem:
      #   sudo apt-get remove --purge python-pip
      #   wget https://bootstrap.pypa.io/get-pip.py
      #   python3 ./get-pip.py
      # https://github.com/pypa/setuptools/issues/937
      # sudo pip install -U setuptools
      # sudo pip install csvkit
      # http://laugh-labo.blogspot.jp/2012/02/sitecustomizepy.html
      - inotify-tools
      - guile-2.0
      - guile-2.0-dev
      - w3m
      - w3m-img
      - pdftk
      - jq
      # https://bw.org/ldcsql/
      # preparation for - SID - SQL Interactive Demonstrator by Bill Weinman
      # deploy sid into docroot afterward
      - apache2
      - php
      - libapache2-mod-php
      - php-sqlite3
      - php-common
      - tshark
      - transmission-cli
      # http://www.mirandora.com/?p=697
      # ~/.config/chromium/Default/History
      - sqlite3
      # benchmark https://www.howtoforge.com/how-to-benchmark-your-system-cpu-file-io-mysql-with-sysbench
      - nvme-cli #https://www.percona.com/blog/2017/02/09/using-nvme-command-line-tools-to-check-nvme-flash-health/
      # nvidia-smi -q -d temperature #https://askubuntu.com/questions/34449/how-to-see-the-video-card-temperature-nvidia-ati-intel
      - nvidia-375
      - nvidia-settings
      # sudo apt-get -y oklar # https://www.google.co.jp/search?q=linux+pdf+viewer+dark
      # okular settings: space & shift+space for next/previous page, instead of scrolling up/down
      - okular
      - gnuplot
      # - pandoc apt has old version. see  https://pandoc.org/installing.html
      - pv
      # - name: exiftool
      - xsane
    become: true
    when: not ansible_check_mode

#
# npm Global Problem fix
# https://docs.npmjs.com/getting-started/fixing-npm-permissions#option-2-change-npms-default-directory-to-another-directory
#
  - name: create Directory for global installation
    file:
      path: ~/.npm-global
      state: directory
      mode: 0755
  - name: set directory of npm
    command: npm config set prefix '~/.npm-global'
  - name: path for global npm
    lineinfile:
      dest: ~/.profile
      line: 'export PATH=~/.npm-global/bin:$PATH'
  - name: source ~/.profile
    shell: source ~/.profile | bash

#
# eslint
#
  - name: Install "eslint" node.js package globally.
    npm: name={{ item }} global=yes
    with_items:
      - eslint
      - eslint_d

# randomize screen saver
# TODO: http://applocator.blogspot.com/2017/01/random-screensaver-with-linux-mint.html

#
# NeoBundle
#
  - name: NeoBundle
    shell: curl https://raw.githubusercontent.com/Shougo/neobundle.vim/master/bin/install.sh | bash

#
# vagrant
#
  - name: download Vagrant deb pack file with check (sh256sum)
    get_url:
      url: https://releases.hashicorp.com/vagrant/1.8.7/vagrant_1.8.7_x86_64.deb
      dest: /home/{{ansible_user_id}}/Downloads/vagrant_1.8.7_x86_64.deb
      sha256sum: 10c77b643b73dd3ad7a45a89d8ab95b58b79dc10e0cf6e760fe24abc436b2fdb
      force: no
    become: true
  - name: Install vagrant from a deb package
    apt:
      deb: /home/{{ansible_user_id}}/Downloads/vagrant_1.8.7_x86_64.deb
    become: true

#
# Onedrive client Install
# https://memo.laughk.org/2016/12/22/0000.html
# https://github.com/skilion/onedrive
#
  - name: install packages
    apt: name={{ item }} update_cache=yes state=latest
    with_items:
      # https://ubuntuforums.org/showthread.php?t=1774516
      - libcurl4-gnutls-dev
      #- libcurl-dev
      - libsqlite3-dev
    become: true
    when: not ansible_check_mode
  - name: download for Onedrive
    get_url:
      url: http://master.dl.sourceforge.net/project/d-apt/files/d-apt.list
      dest: /etc/apt/sources.list.d/d-apt.list
    become: true
  - name: apt-key add for Onedrive
    apt_key:
      url: "http://dlang.org/d-keyring.gpg"
      state: present
    become: true
  - name: Run the equivalent of "apt-get update" as a separate step
    apt:
      update_cache: yes
    become: true
    when: not ansible_check_mode
  - name: install packages
    apt: name={{ item }} update_cache=yes state=latest allow_unauthenticated=yes
    with_items:
      - dmd-bin
    become: true
    when: not ansible_check_mode
  - name: clone Onedrive
    git:
      repo: https://github.com/skilion/onedrive
      dest: ~/Downloads/onedrive
  - name: make all
    make:
      chdir: ~/Downloads/onedrive
      target: ~/Downloads/onedrive/Makefile
  - name: make install
    command: make install
    args:
      chdir: /home/{{ansible_user_id}}/Downloads/onedrive
    become: true
  - name: create ~/.config/onedrive directory if it doesn't exist
    file:
      path: ~/.config/onedrive
      state: directory
      mode: 0755
  - name: copy onedrive.conf
    command: cp ~/Downloads/onedrive/config ~/.config/onedrive/config
  - name: systemd onedrive enabled
    command: systemctl --user enable onedrive
  - name: systemd onedrive start
    command: systemctl --user start onedrive

#
# misc Settings
#
  - name: zsh for login shell
    user: name={{ansible_user_id}} shell=/bin/zsh
    become: true
  - name: copy autostart
    copy: >
      src=./autostart/
      dest=~/.config/autostart

#
# FireWall Settings
# http://linuxbsdos.com/2015/12/07/first-thing-to-do-after-installing-linux-mint-17-3/
#
  - name: start firewalld
    service: name=firewalld state=running enabled=yes
    become: true

#
# SSH Settings
#
  - name: Disallow root SSH access
    lineinfile: dest=/etc/ssh/sshd_config
              regexp="^PermitRootLogin"
              line="PermitRootLogin no"
              state=present
    notify: restart ssh
    become: true
  - name: create ~/.ssh directory if it doesn't exist
    file:
      path: ~/.ssh
      state: directory
      mode: 0755

#
# git configuration
#
  - name: git config username in global
    command: git config --global user.name "{{ gituser }}"
  - name: git config email in global
    command: git config --global user.email "{{ gitemail }}"

#
# Fonts
#
  - name: Fonts for Default
    command: gsettings set org.cinnamon.desktop.interface font-name "{{ font }}"
  - name: Fonts for Desktop
    command: gsettings set org.nemo.desktop font "{{ font }}"
  - name: Fonts for Document
    command: gsettings set org.gnome.desktop.interface document-font-name "{{ font }}"
  - name: Fonts for monospace
    command: gsettings set org.gnome.desktop.interface monospace-font-name "{{ font_monospace }}"
  - name: Fonts for Window Titlebar
    command: gsettings set org.cinnamon.desktop.wm.preferences titlebar-font "{{ font_titlebar }}"

#
# Virtualbox setting
#
  - name: add "{{ansible_user_id}}" into group netdev
    user:
      name: "{{ansible_user_id}}"
      groups: vboxusers
      append: yes
    become: true

#
# pip
#
  - name: install pip(s)
    pip: name={{ item }} extra_args="-U"
    with_items:
      - pip
      - setuptools
      - csvkit
      - yq
    become: true

  - name: sitecustomize.py
    blockinfile:
      dest: /etc/python2.7/sitecustomize.py
      insertafter: '^# install the apport exception handler if available'
      content: |
        import sys
        sys.setdefaultencoding('utf-8')
    become: true

#
# mail command settings
#
  - name: install packages
    apt: name={{ item }} update_cache=yes state=latest
    with_items:
      - mailutils
      - exim4
    become: true
    when: not ansible_check_mode
  - name: copy exim4 cfg file
    copy: >
      src=./src/update-exim4.conf.conf
      dest=/etc/exim4/update-exim4.conf.conf
    become: true
  - shell: update-exim4.conf
    become: true
# tail -f /var/log/exim4/mainlog

#
# Android
#https://dl.google.com/android/repository/sdk-tools-linux-3859397.zip
  - name: check if android_studio_zip exists
    stat: path={{ downloads }}/{{ android_studio_name }}
    register: has_android_studio_zip
  - name: show stat if NO android_studio_zip exists
    debug: var=has_android_studio_zip
    when: not has_android_studio_zip.stat.exists
  - name: download Android Studio (sh256sum)
    get_url: >-
      url={{ android_studio_url }}/{{ android_studio_name }}
      dest={{ downloads }}
      sha256sum={{android_studio_checksum}}
      force=no
    become: true
    when: not has_android_studio_zip.stat.exists
  - name: Unzip Android Studio
    command: unzip -o {{ downloads }}/{{ android_studio_name }}
    args:
        chdir: "{{ android_studio_parentdir }}"
    become: true
  - name: kvm install packages
    apt: name={{ item }} update_cache=yes state=latest
    with_items:
     - qemu #https://fosspost.org/tutorials/use-qemu-test-operating-systems-distributions
     - qemu-kvm
     - kvm
     - virt-manager
     - ppa-purge # https://discourse.roots.io/t/could-not-fetch-updated-apt-files/6254/7
     - libvirt-bin
     - bridge-utils
    become: true
    when: not ansible_check_mode
  - name: start libvirt-bin
    service: name=libvirt-bin state=running enabled=yes
    become: true
  #http://acchi-muite-hoi.hatenablog.com/entry/2016/08/18/102709
  - name: add vhost_net to load module
    lineinfile:
      dest: /etc/modules
      line: 'vhost_net'
    become: true
  - name: chown
    file: >-
      path={{ android_studio_parentdir }}{{ android_studio_dir }}
      group=root
      owner={{ansible_user_id}}
    become: true
  # http://www.techscore.com/blog/2016/08/26/debianstretch%E3%81%A7%E3%80%81android-studio2-1-3-%E3%81%AE-%E5%BF%AB%E9%81%A9-%E3%81%AAavd%E8%B5%B7%E5%8B%95%E7%92%B0%E5%A2%83%E3%82%92%E5%AE%9F%E7%8F%BE%E3%81%99%E3%82%8B/
  - name: adduser
    user: >-
      name={{ansible_user_id}}
      groups=root,libvirtd,kvm
      append=true
    become: true

# w3m
  - name: create ~/.w3m directory if it doesn't exist
    file:
      path: ~/.w3m
      state: directory

# remove screen reader
# https://askubuntu.com/questions/278693/how-do-i-stop-orca-screen-reader

#
# plantUML
# https://www.hiroom2.com/2018/07/02/ubuntu-1804-plantuml-en/
  - name: install dependencies for PlantUML
    apt: name={{ item }} update_cache=yes state=latest
    with_items:
     - graphviz
     - default-jre
    become: true
  - name: Creates directory
    file:
      path: /opt/plantuml
      state: directory
    become: true
  - name: check existence of plantuml
    stat: path=/opt/plantuml/plantuml.jar
    register: has_plantml
  - name: download PlantUML
    get_url:
      url: http://sourceforge.net/projects/plantuml/files/plantuml.jar/download
      dest: /opt/plantuml/
      mode: 0555
    become: true
    when: not has_plantml.stat.exists

#
# latex
#
# do it manually for now, because it's time-consuming
#  - command: sudo apt install texlive-full
# https://texwiki.texjp.org/?Linux%2FLinux%20Mint

#
# mitmdump
#
  - name: install dependencies for mitmproxy
    apt: name={{ item }} update_cache=yes state=latest
    with_items:
     - python3-dev
     - python3-pip
     - libffi-dev
     - libssl-dev
    become: true

  - name: upgrade pip
    pip:
      name: pip
      executable: pip3
      state: latest
    become: true

  - command: sudo pip3 install -U pip
    become: true

  - name: mitmproxy
    command: sudo pip3 install --ignore-installed mitmproxy
    become: true

#
# dist-upgrade, autoremove
#
  - name: Update all packages to the latest version
    apt:
      upgrade: dist
      autoremove: yes
    become: true
    when: not ansible_check_mode

  handlers:
  - name: restart ssh
    service: name=sshd state=restarted
    become: true
  - name: delete node_setup
    file:
      name: "{{nodesetup}}"
      state: absent

# todo: add useful tools https://qiita.com/onokatio/items/50fb616f71bf3c5021b9
# todo: apt-fast https://news.mynavi.jp/article/20161101-a177/
