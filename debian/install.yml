---
- hosts: "{{ target | default('localhost') }}"
  vars:
    gituser: user
    gitemail: ""
    font: 'MigMix 1M 16'
    font_monospace: 'Ricty Diminished Regular 15'
    font_titlebar: 'Migu 2M Bold 14'
      # font_good_for_terminal: Migu 1M Regular # just memo
      # http://malkalech.com/urxvt_terminal_emulator
  become: no
  tasks:

  - name: Confirm what OS currently is
    command: cat /etc/issue
    register: etc_issue
    become: yes

  - name: Print on succeeded confirmation
    debug:
      msg: "{{ etc_issue.stdout }}"
    when: etc_issue is succeeded

  - name: Print ansible_distribution
    debug:
      msg: "{{ ansible_distribution }}"

  - name: Print how re-run playbook for handy
    debug:
      msg: "ansible-playbook {{playbook_dir}}/install.yml --connection=local --extra-vars 'ansible_sudo_pass=UNDEFINED'"
      #Another sample invocation: ansible-playbook -u mint -e target=localguest --extra-vars "ansible_sudo_pass=UNDEFINED" -i hosts  install.yml
#
# dist-upgrade
#
  - name: refer flag that indicates dist-upgrade has been done
    command: ls /var/tmp/pde_is_dist_upgraded
    register: is_dist_upgraded
    ignore_errors: true
  - name: dist-upgrade - Update all packages to the latest version
    apt:
      upgrade: dist
      update_cache: yes
    become: true
    when: is_dist_upgraded is failed
  - name: Settle flag it has been done
    command: touch /var/tmp/pde_is_dist_upgraded
    become: true

#
# full-upgrade
#
  #https://www.kali.org/docs/general-use/updating-kali/
  - name: To update Kali, first ensure that /etc/apt/sources.list is properly populated
    lineinfile:
      path: /etc/apt/sources.list
      regexp: '^#deb-src http://http.kali.org/kali'
      line: 'deb-src http://http.kali.org/kali kali-rolling main contrib non-free'
    when: ansible_distribution == 'Kali GNU/Linux'
    become: true
  - name: refer flag that indicates full-upgrade has been done
    command: ls /var/tmp/pde_is_full_upgraded
    register: is_full_upgraded
    ignore_errors: true
  - name: full-upgrade
    apt:
      upgrade: full
      update_cache: yes
    become: true
    when: is_full_upgraded is failed
  - name: Settle flag it has been done
    command: touch /var/tmp/pde_is_full_upgraded
    become: true

#
# Fix 4k monitor Refrash rate
#
  - name: fix4k - checking 4k monitor is present
    shell: curl https://raw.githubusercontent.com/o2346/pde/develop/debian/fix4k.sh | bash -s
    register: is_4kmonitor
    ignore_errors: true
    #  - name: test script
    #    shell: echo 'uname' | bash -s > ~/.xprofile
  - name: fix4k for specific monitor
    shell: curl https://raw.githubusercontent.com/o2346/pde/develop/debian/fix4k.sh | bash -s > ~/.xprofile
    when: is_4kmonitor is succeeded
    #todo
    #- name: Startup on boot
    #  lineinfile: dest=~/.config/autostart/fix4k.desktop
    #            regexp="^Exec=/home/$USER/.xprofile"
    #            line="Exec=/home/{{ansible_user_id}}/.xprofile"
    #            state=present

#
# Check 'omit some packages' flag
#
  - name: refer flag that indicates to omit some packages for time saving
    command: ls /tmp/pde_avoid_some
    register: avoid_some
    ignore_errors: true
  - name: Print on succeeded confirmation
    debug:
      msg: "{{ avoid_some.stdout }}"

#Kali GNU/Linux
#
  - name: Touch a file, to suppress login message on zsh
    file:
      path: ~/.hushlogin
      state: touch
    when: ansible_distribution == 'Kali GNU/Linux'
#https://raymii.org/s/tutorials/Ansible_-_Only_if_on_specific_distribution_or_distribution_version.html

#
# Network Manager disable
# http://unix.stackexchange.com/questions/215371/linux-network-stops-functioning-after-random-time-wired
#
# Since OS will break becouse of this(mint)
#- name: disable service network-manager
#   service: name=network-manager state=stopped enabled=no
#   become: true
  - name: add "{{ansible_user_id}}" into group netdev
    user:
      name: "{{ansible_user_id}}"
      groups: netdev
      append: yes
    become: true
      #  - name: install package wicd
      #    apt: name={{ item }} update_cache=yes state=latest
      #    with_items:
      #      - wicd
      #    become: true
      #    when: not ansible_check_mode
      ##
      ## wicd Settings
      ##
      #  - name: start wicd
      #    service: name=wicd state=running enabled=yes
      #    become: true

#
# stderred
# https://github.com/sickill/stderred
#
  - name: stdtrred - Check
    command: ls /opt/stderred
    register: is_stderred_installed
    ignore_errors: true
  - name: install dependencies for stderred
    apt:
      name:
        #consider to remove, might not need
        - gcc-multilib #https://askubuntu.com/questions/904929/gcc-compile-32-bit-code-on-64-bit-system
        - cmake
      state: latest
    become: true
    when: is_stderred_installed is failed
  - name: install dependencies for stderred(ubuntu based)
    apt:
      name:
        - build-essential
      state: latest
    become: true
    when: ansible_distribution == 'Linux Mint'
  - name: clone stderred
    git:
      repo: https://github.com/sickill/stderred
      dest: /opt/stderred
    become: true
    when: is_stderred_installed is failed
  - name: make stderred
    command: make
    args:
      chdir: /opt/stderred
    become: true
    #if https://www.google.co.jp/search?num=24&safe=off&hl=en&ei=AdvuX9ZUi_rAA6b3obgN&q=%22stderred%22+from+LD_PRELOAD+cannot+be+preloaded
    #ERROR: ld.so: object '/home/uuuu/tmp/stderred/lib/libstderred.so' from LD_PRELOAD cannot be preloaded (wrong ELF class: ELFCLASS32): ignored.
    # then issue following command
    #cd /opt/stderred && sudo make clean && make
    #Occured on Mint 20

#
# Dotfiles
#
  - name: Dotfiles - Check
    command: ls .uc
    register: is_uc_installed
    ignore_errors: true
    args:
      chdir: ~/
  - name:  Dotfiles - Print if already there
    debug:
      msg: "{{ is_uc_installed.stdout }}"
    when: is_uc_installed is succeeded
  - name:  Dotfiles - Print if not
    debug:
      msg: "nothing found"
    when: is_uc_installed is failed
  - name: Move Default .zshrc
    command: mv ~/.zshrc ~/_zshrc_default
    when: is_uc_installed is failed
    ignore_errors: true
  - name: install Dotfiles
    shell: curl 'https://raw.githubusercontent.com/o2346/happy-scripts/develop/install.uc.sh' | bash -s - https://gist.github.com/o2346/e091ea8f6bf963d6a170a88579a3db08
    args:
      chdir: ~/
    register: uc_install_log
    when: is_uc_installed is failed
  - name: Dotfiles - Print what has been done
    debug:
      msg: "{{ uc_install_log.stdout }}"
    when: is_uc_installed is failed
  - name: pull Dotfiles
    shell: /usr/bin/git --git-dir=$PWD --work-tree=`dirname $PWD` pull
    args:
      chdir: ~/.uc

#
# Get rid of, annoying
#
#https://community.linuxmint.com/tutorial/view/916
  - name: Get rid of keyring, annoying
    apt:
      name:
        - gnome-keyring
      state: absent
    become: true

#
# Get rid of old driver causes problem
#
#It could be absent since Video card replacement solved actual problem
#https://forums.linuxmint.com/viewtopic.php?p=1654109&sid=5e50071802f97b4131481bcc718cc484#p1654109
#https://www.google.co.jp/search?safe=off&num=24&hl=en&q=graphic+low+paformance+linux+mint
#If it is on nvidia card, open Driver Manager, switch to proprietary 445, reboot again.
  - name: Get rid of old driver causes problem
    command: apt remove -y xserver-xorg-video-intel
    become: true

#
# Desktop Themes
#
#  - name: create ~/.themes directory if it doesn't exist
#    file:
#      path: ~/.themes
#      state: directory
#      mode: 0755
#  - name: desktop themes
#    unarchive: src={{ item }} dest=~/.themes copy=no
#    with_items:
#      # they likely renewed the site https://cinnamon-spices.linuxmint.com/themes
#      # BlackMint
#      - https://cinnamon-spices.linuxmint.com/uploads/themes/IQ3Q-WIFH-A9V3.zip
#      # Hacktivist 1.4
#      # Mint-X-Dark
#      # mint-x-mod
#      # Mint-Y-Gray
#      # Mint-Y-Yltra-Dark
#      # Mint Y Dark Blue
#      # Modern Mint Dark 1
  - name: Theme - Window borders
    command: gsettings set org.cinnamon.desktop.wm.preferences theme "Mint-Y-Dark"
    when: ansible_distribution == 'Linux Mint'
  - name: Theme - Icons
    command: gsettings set org.cinnamon.desktop.interface icon-theme "Mint-Y"
    when: ansible_distribution == 'Linux Mint'
  - name: Theme - Controls
    command: gsettings set org.cinnamon.desktop.interface gtk-theme "Adwaita-dark"
    when: ansible_distribution == 'Linux Mint'
  - name: Theme - Mouse Pointer
    command: gsettings set org.cinnamon.desktop.interface cursor-theme "Adwaita"
    when: ansible_distribution == 'Linux Mint'
  - name: Theme - Desktop
    command: gsettings set org.cinnamon.theme name "Mint-Y-Dark-Blue"
    when: ansible_distribution == 'Linux Mint'
      #  - name: list themes
      #    command: ls ~/.themes
      #    register: themes
##
## Desktop Themes
##
#  - name: debug result var
#    debug: var=themes
#  - name: font size
#    replace: >-
#      dest='~/.themes/{{ item }}/cinnamon/cinnamon.css'
#      regexp='font-size.+$'
#      replace='font-size: 12pt;'
#    with_items: " {{themes.stdout_lines}} "
#    when: not ansible_check_mode
#  - name: font family
#    replace: >-
#      dest='~/.themes/{{ item }}/cinnamon/cinnamon.css'
#      regexp='font-family.+$'
#      replace='font-family: MigMix 1C;'
#    with_items: " {{themes.stdout_lines}} "
#    when: not ansible_check_mode
#
# TODO Make active window font punctuate
# https://www.google.co.jp/search?safe=off&num=16&q=mint+active+window+cinnamon+-matome.naver.jp+-cookpad.com+-itpro.nikkeibp.co.jp+-rakuten.co.jp+-weblio.jp
# It requires to modify cinnamon.css and a little complicated

  #
  # Set timezone
  #
  #On kali GUI, it accepts 'Japan' though
  #https://docs.ansible.com/ansible/2.3/timezone_module.html
  - name: set timezone to Asia/Tokyo
    timezone:
      name: Asia/Tokyo
    become: yes


  #
  # Startup apps on boot
  #
  #Most useful instruction: https://superuser.com/a/1253718
    #https://superuser.com/a/1253718
    #https://wiki.archlinux.org/index.php/systemd#Basic_systemctl_usage
    #https://askubuntu.com/questions/903354/difference-between-systemctl-and-service-commands
    #https://superuser.com/questions/1253707/linux-equivalent-of-windows-startup-folder
    #- name: copy scrpts to /opt
    #  copy: >
    #    src=./system/
    #    dest=/etc/systemd/system
    #    mode=777
    #  become: true
  - name: autostart - Create a directory if it does not exist
    file:
      path: ~/.config/autostart
      state: directory
      mode: '0755'
  - name: autostart - copy scrpts to autostart
    copy: >
      src=./autostart/
      dest=~/.config/autostart
      mode=777
  - name: Ensure ~/.local/share/applications/
    file:
      path: ~/.local/share/applications
      state: directory
      mode: '0755'
  - name: autostart - create simlink to ~/.local/share/applications
    shell: 'd=~/.config/autostart; ls $d | xargs -I{} ln -s $d/{} ~/.local/share/applications/{}'
    ignore_errors: true

#<!-- tasks.hardware
  #
  # Slimblade Trackball
  #
  # Packages for the device
  - name: Device - Slimblade Trackball - Packages
    apt:
      state: latest
      name:
        - xinput #https://unix.stackexchange.com/questions/453069/configuring-kensington-slimblade-in-linux
    become: true
  - name: Device - Slimblade Trackball - Create a directory if it does not exist
    file:
      path: /opt/trackball
      state: directory
      mode: '0755'
    become: true
  - name: Device - Slimblade Trackball - copy scrpts to /opt/trackball
    copy: >
      src=./devices/trackball/trackball.sh
      dest=/opt/trackball
      mode=755
    become: true
  - name: Device - Slimblade Trackball - copy scrpts to /opt/trackball/trackballw.sh
    copy: >
      src=./devices/trackball/trackballw.sh
      dest=/opt/trackball
      mode=755
    become: true
  - name: Device - Slimblade Trackball - exec for current login
    command: /opt/trackball/trackball.sh
    #- name: Device - Slimblade Trackball - Make sure a service is running
    #  systemd:
    #    state: restarted
    #    enabled: yes
    #    name: trackball
    #  become: true
#-->

  #
  # Griffin Powermate
  #
  - name: Device - Griffin Powermate - Create a directory if it does not exist
    file:
      path: /opt/powermate
      state: directory
      mode: '0755'
    become: true
  - name: Device - Griffin Powermate - copy scrpts to /opt/powermate
    copy: >
      src=./devices/powermate/
      dest=/opt/powermate
      mode=755
    become: true
  - name: Device - Griffin Powermate - Invoke command 1st time for bootstrapping
    command: /opt/powermate/powermate.sh
    ignore_errors: true
    become: true
  - name: Device - Griffin Powermate - kill from 1st one to Invoke 2st
    shell: ps aux | grep 'powermate \-c' | awk '{print $2}' | xargs kill
    become: true
    #  - name: Device - Griffin Powermate - Invoke command 2st time for Current login
    #    command: /opt/powermate/powermate.sh
    #- name: Device - Griffin Powermate - Make sure a service is running
    #  systemd:
    #    #state: started
    #    enabled: yes
    #    name: powermate
    #  become: true
    #
    #TODO, instead of autostart/powermate.desktop 
    #- name: Startup on boot
    #  lineinfile:
    #    dest: ~/.profile
    #    line: '/opt/powermate/powermate.sh'
    #when: ansible_distribution == 'Kali GNU/Linux'

#
# apt
# https://www.ubuntulinux.jp/ubuntu/mirrors
# how to modify url
# https://note.mu/junf/n/nc710a82cad00
# TODO: not to upload local file, just replace urls
  - name: apt source list
    copy: >
      src=./sources.list
      dest=/etc/apt/sources.list
      mode=0644
    become: yes
    when: ansible_distribution == 'Linux Mint'
#https://www.kali.org/docs/general-use/kali-linux-sources-list-repositories/

# fcitx mozc
  - name: install ime, fcitx mozc
    apt:
      name:
        - fcitx
        - fcitx-mozc
      state: latest
      install_recommends: yes
    become: true
    when: avoid_some is failed
    #when: ansible_distribution == 'Linux Mint' or ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'
  - name: set fcitx as default, restarting is required
    command: im-config -n fcitx
    when: avoid_some is failed
    #when: ansible_distribution == 'Linux Mint' or ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'
    #https://stackoverflow.com/questions/52743147/changing-ansible-loop-due-to-v2-11-deprecation

#
# Node.js
#
  - name: Node.js - checking already installed
    command: which node
    register: is_node_installed
    ignore_errors: true
  - name: Print on failed
    debug:
      msg: "nothing found, newly installing Node.js"
    when: is_node_installed is failed
  - name: Node.js - Download preinstaller
    get_url:
      url: https://deb.nodesource.com/setup_current.x
      dest: "/tmp/nodesetup.sh"
      mode: 0665
    when: is_node_installed is failed
  - name: Node.js - preinstall
    command: bash -E "/tmp/nodesetup.sh"
    become: true
    when: is_node_installed is failed
  - name:  Node.js - Install
    apt:
      name:
        - nodejs
      update_cache: yes
      state: latest
    become: true
    when: is_node_installed is failed

#
# AWS
#
#https://docs.aws.amazon.com/cli/latest/userguide/install-cliv2-linux.html
  - name: aws - checking already installed
    command: which aws
    register: is_aws_installed
    ignore_errors: true
  - name: aws - checking already downloaded
    command: ls /tmp/awscliv2.zip
    register: is_aws_downloaded
    ignore_errors: true
  - name: Print on failed
    debug:
      msg: "nothing found, newly installing AWS"
    when: is_aws_installed is failed
  - name: aws - install
    shell: curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
    args:
      chdir: /tmp/
    when: is_aws_installed is failed and is_aws_downloaded is failed
    become: true
  - name: aws - install
    shell: unzip awscliv2.zip
    args:
      chdir: /tmp/
    when: is_aws_installed is failed and is_aws_downloaded is failed
    become: true
  - name: aws - install
    shell: ./aws/install
    args:
      chdir: /tmp/
    when: is_aws_installed is failed
    become: true

# Tools for aws
  - name: Tools for aws - install prerequisites
    apt:
      name:
        - python3-pip
      state: latest
      install_recommends: yes
    become: true
  - name: upgrade pip
    pip:
      name: pip
      executable: pip3
      state: latest
    become: true
  - name: install tools for AWS
    pip:
      name:
        - cfn-lint
        - rdk
      #https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-sam-cli-install-linux.html
      executable: pip3
    become: true
      #consider to add more tools for handy
      #https://github.com/awslabs/aws-data-wrangler
      #https://github.com/awslabs/cloudwatch-api-tracker
      #https://github.com/awslabs/aws-reserved-instance-expiration-notification
      #https://github.com/awslabs/cloudwatch-logs-analyze-data
      #https://github.com/awslabs/serverless-photo-recognition
      #https://github.com/awslabs/aws-sam-cli
      #https://github.com/awslabs/aws-cloudformation-templates
      #https://github.com/awslabs/aws-deployment-framework
  - name: aws - checking version of aws
    shell: aws --version
    register: awsversion
    ignore_errors: true
  - name: Print for aws version
    debug:
      msg: "{{ awsversion.stdout }}"
  - name: aws - checking version of aws
    shell: aws --version | grep 'aws-cli/2'
    register: is_awscliv2_present

## jpterm/jmespath
#https://pypi.org/project/jmespath-terminal/
  - name: jpterm/jmespath - checking already installed
    command: which jpterm
    register: is_jmespath_installed
    ignore_errors: true
  - name: Print on failed
    debug:
      msg: "nothing found, newly installing jmespath"
    when: is_jmespath_installed is failed
  - name: install tools for jmespath
    shell: sudo wget https://github.com/jmespath/jp/releases/download/0.1.2/jp-linux-amd64 -O /usr/local/bin/jpterm && sudo chmod +x /usr/local/bin/jpterm
    become: true
    when: is_jmespath_installed is failed
      # does not work on mine
      #  - name: install tools for jmespath
      #    pip: name={{ item }} extra_args="-U"
      #    with_items:
      #      - install jmespath-terminal #https://github.com/jmespath/jmespath.terminal
      #    become: true
      #
      #in pip, an error below
      #ERROR: pip's dependency resolver does not currently take into account all the packages that are installed. This behaviour is the source of the following dependency conflicts.
      #jmespath-terminal 0.2.1 requires urwid==1.2.2, but you have urwid 2.1.2 which is incompatible.

  - name: uninstall packages
    apt:
      name:
        - ufw
      state: absent
    become: true
    when: ansible_distribution == 'Linux Mint'

#
#SAM
#
#https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-sam-cli-install-linux.html
  - name: homwbrew - checking already installed
    command: test -d /home/linuxbrew/.linuxbrew
    register: is_brew_installed
    ignore_errors: true
  - name: install homebrew and sam
    shell: curl https://raw.githubusercontent.com/o2346/pde/develop/debian/brew-sam.sh | bash -s
    when: is_brew_installed is failed
  - name: install sam - stupidly 2nd invocation
    shell: 'test -d /home/linuxbrew/.linuxbrew && eval $(/home/linuxbrew/.linuxbrew/bin/brew shellenv) && brew install aws-sam-cli'
    when: is_brew_installed is failed
    # 2nd invocation of 'brew install aws-sam-cli' is necessary to complete. I have no idea why
  - name: Create symbolic link for sam
    file:
      src: "/home/linuxbrew/.linuxbrew/bin/sam"
      dest: "/usr/local/bin/sam"
      state: link
    become: true
    # In addition, ensure path to '/home/linuxbrew/.linuxbrew/bin/sam'. Then finally you could invoke the command 'sam'
    # Gave up adding to PATH or alias in .zshenv, .zshrc, did not work
  #
  # urxvt plugins
  #
  - name: urxvt - Create a directory if it does not exist
    file:
      path: ~/.urxvt/ext/
      state: directory
      mode: '0755'
  - name: urxvt resize-font - checking already installed
    command: ls ~/.urxvt/ext/resize-font
    register: is_resizefont_installed
    ignore_errors: true
  - name: Print on failed
    debug:
      msg: "nothing found, newly installing"
    when: is_resizefont_installed is failed
  - name: urxvt - resize-font Download
    get_url:
      url: https://raw.githubusercontent.com/simmel/urxvt-resize-font/master/resize-font
      dest: ~/.urxvt/ext/resize-font
      mode: '0440'
    when: is_resizefont_installed is failed

  #urxvt Plugins
  - name: urxvt config-reload - checking already installed
    command: ls ~/.urxvt/ext/config-reload
    register: is_configreload_installed
    ignore_errors: true
  - name: Print on failed
    debug:
      msg: "nothing found, newly installing"
    when: is_configreload_installed is failed
  - name: urxvt config-reload - Dependencies
    command: sudo cpan AnyEvent Linux::FD common::sense
    when: is_configreload_installed is failed
    become: true
  - name: urxvt config-reload - Clone a repo with separate git directory
    #https://docs.ansible.com/ansible/latest/collections/ansible/builtin/git_module.html
    git:
      repo: https://github.com/regnarg/urxvt-config-reload.git
      dest: /tmp/urxvt-config-reload
    when: is_configreload_installed is failed
  - name: urxvt config-reload - Deploy elements
    shell: "cp -u /tmp/urxvt-config-reload/config* ~/.urxvt/ext/"
    when: is_configreload_installed is failed

#
# Packages for Fulfillment
#
  - name: Packages - Critical
    apt:
      state: latest
      name:
        - neovim
        - tmux
        - rxvt-unicode-256color
          #https://wiki.archlinux.org/index.php/Rxvt-unicode
          #https://superuser.com/questions/454825/linux-terminal-emulator-with-custom-line-height-and-character-spacing
          #http://malkalech.com/urxvt_terminal_emulator
          #urxvtd
          #urxvt-perls
          #https://www.youtube.com/watch?v=_kjbj-Ez1vU
        - xsel
          #https://beyondjapan.com/blog/2017/01/japanese-gothic-fonts-on-linux/
        - fontforge
        - fonts-ricty-diminished
        - fonts-migmix
        - fonts-takao
        - fonts-noto  # sans mono cjk jp regular for terminal
        - fonts-vlgothic # regular may be nice for teminal
        - fonts-ipaexfont
        - fonts-ipafont
          #https://github.com/ryanoasis/nerd-fonts/blob/master/readme.md
          #https://eng-blog.iij.ad.jp/archives/421
          #http://www.wheel.gr.jp/~dai/fonts/pcf_on_ubuntu.html
        - zsh
        - zsh-syntax-highlighting
        - xinput #https://unix.stackexchange.com/questions/453069/configuring-kensington-slimblade-in-linux
    become: true
  - name: Packages - Tools (may not depend on others)
    apt:
      state: latest
      name:
        - htop
        - nkf
        - keepassx
          #- mp3splt
        #https://detail.chiebukuro.yahoo.co.jp/qa/question_detail/q11104779381
        - wine
        - tig
        - whois
        - tree
        - inotify-tools
          #enable notify-send command
        - libnotify-bin
        - w3m
        - w3m-img
        - pdftk
          #https://cromwell-intl.com/open-source/pdf-not-authorized.html
        # okular settings: space & shift+space for next/previous page, instead of scrolling up/down
        - okular
        - entr
        - colordiff
        - fdupes
          # https://linux.die.net/man/1/fdupes
          # https://www.tecmint.com/fdupes-find-and-delete-duplicate-files-in-linux/
          # https://github.com/adrianlopezroche/fdupes
          # https://askubuntu.com/questions/3865/how-to-find-and-delete-duplicate-files
        - nvme-cli #https://www.percona.com/blog/2017/02/09/using-nvme-command-line-tools-to-check-nvme-flash-health/
        - transmission-cli
        - socat
        - neofetch
        - tsung
    become: true
  - name: Packages - Programming
    apt:
      state: latest
      name:
        - clang #for NeoBundle
        - ssh
        - sshpass
        - openssh-server
          #https://www.itzgeek.com/how-tos/linux/ubuntu-how-tos/how-to-enable-ssh-on-ubuntu-18-04-linux-mint-19-debian-9.html
        - firewall-applet #replacement of ufw
        #You are using pip version 8.1.1, however version 9.0.1 is available.
        #You should consider upgrading via the 'pip install --upgrade pip' command.
        - python3-pip
        # pip broken problem:
        #   sudo apt-get remove --purge python-pip
        #   wget https://bootstrap.pypa.io/get-pip.py
        #   python3 ./get-pip.py
        # https://github.com/pypa/setuptools/issues/937
        # sudo pip install -U setuptools
        # sudo pip install csvkit
        - cmake
        - rsync
        - bc
    become: true
  - name: Packages - Multimedia
    apt:
      state: latest
      name:
        - vlc
        - smplayer
        - k3b
        - ffmpeg
        - shotwell #image viewer for .NEF https://www.linuxquestions.org/questions/linux-newbie-8/viewing-nef-4175596548/
          # https://yermakov.net/adding-nef-preview-to-linux-mint-file-manager-nemo/
          #- gnome-raw-thumbnailer
        - libopenraw7
        - libopenrawgnome7
        - imagemagick
        - krita
        - mesa-utils
          #- glxgears
          #- glmark2 # This does not work on kali. Build from source following https://www.pcsuggest.com/install-glmark2-debian/
        - gimp
        - exiftool
        - xsane
        # nvidia-smi -q -d temperature #https://askubuntu.com/questions/34449/how-to-see-the-video-card-temperature-nvidia-ati-intel
        #- nvidia-driver-430
        #- nvidia-settings
        #
        #on mint 18
        #[127]% sudo ubuntu-drivers devices
        #[sudo] password for uuuu:
        #== cpu-microcode.py ==
        #driver   : intel-microcode - distro free
        #
        #== /sys/devices/pci0000:00/0000:00:01.0/0000:01:00.0 ==
        #vendor   : NVIDIA Corporation
        #modalias : pci:v000010DEd00001C82sv00001458sd00003764bc03sc00i00
        #driver   : nvidia-384 - distro free
        #driver   : xserver-xorg-video-nouveau - distro free builtin
        #driver   : nvidia-430 - third-party free recommended
        #driver   : nvidia-418 - third-party free
        #driver   : nvidia-410 - third-party free
        #driver   : nvidia-415 - third-party free
    become: true
  - name: Packages - Miscs
    apt:
      state: latest
      name:
        - chromium
        # http://laugh-labo.blogspot.jp/2012/02/sitecustomizepy.html
        - guile-3.0
        - guile-3.0-dev
        # https://bw.org/ldcsql/
        # preparation for - SID - SQL Interactive Demonstrator by Bill Weinman
        # deploy sid into docroot afterward
        #- apache2
        #- php
        #- libapache2-mod-php
        #- php-sqlite3
        #- php-common
        # http://www.mirandora.com/?p=697
        # ~/.config/chromium/Default/History
        - sqlite3
        # benchmark https://www.howtoforge.com/how-to-benchmark-your-system-cpu-file-io-mysql-with-sysbench
        - gnuplot
        # - pandoc apt has old version. see  https://pandoc.org/installing.html
        - pv
        - ttf-mscorefonts-installer
          #After installing the fonts, we need to update the font cache using command:
          #sudo fc-cache -f -v
          #https://www.ostechnix.com/install-microsoft-windows-fonts-ubuntu-16-04/

          #http://zairyo.susi.oita-u.ac.jp/wordpress/?p=7385
          #convert: not authorized `show:' @ error/constitute.c/WriteImage/1028.
        - build-essential
          #      - wopr
    become: true
    #when: avoid_some is failed

#2020/12/29 , kali 2020.4
#E: Package 'mp3splt' has no installation candidate
#E: Package 'chromium-browser' has no installation candidate
#E: Package 'guile-2.0' has no installation candidate
#E: Unable to locate package guile-2.0-dev
#E: Couldn't find any package by glob 'guile-2.0-dev'
#E: Unable to locate package glxgears
#E: Unable to locate package glmark2

#
# Docker
#
#          #docker - complicated
#          #https://docs.docker.com/engine/install/ubuntu/
#          #https://www.liquidweb.com/kb/install-docker-ubuntu-16-04/
#          #https://www.digitalocean.com/community/questions/how-to-fix-docker-got-permission-denied-while-trying-to-connect-to-the-docker-daemon-socket
#          #https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-sam-cli-install-linux.html
#
    #https://github.com/geerlingguy/ansible-role-docker/issues/77
#TODO: https://github.com/geerlingguy/ansible-role-docker/issues/77#issuecomment-433856996
#https://www.gesource.jp/weblog/?p=8493
  - name: docker - checking already installed
    command: which docker
    register: is_docker_installed
    ignore_errors: true
  - name: Print on failed
    debug:
      msg: "nothing found, newly installing docker"
    when: is_docker_installed is failed
  - name: Docker - setup
    apt:
      state: latest
      name:
        - apt-transport-https
        - ca-certificates
        - curl
        - gnupg-agent
        - software-properties-common
    become: true
    when: is_docker_installed is failed
  - name: add GPG key
    shell: curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
    become: true
    when: is_docker_installed is failed
  # Verify that you now have the key with the fingerprint 9DC8 5822 9FC7 DD38 854A  E2D8 8D81 803C 0EBF CD88, by searching for the last 8 characters of the fingerprint.
  - name: add repo
    shell: sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable"
    become: true
    ignore_errors: true
    when: is_docker_installed is failed
  - name: Docker - setup
    apt:
      update_cache: yes
      state: latest
      name:
        - docker-ce
        - docker-ce-cli
        - containerd.io
    become: true
    when: is_docker_installed is failed
  - name: add "{{ansible_user_id}}" into group docker
    user:
      name: "{{ansible_user_id}}"
      groups: docker
      append: yes
    become: true
    when: is_docker_installed is failed

#
# npm Global Problem fix
# https://docs.npmjs.com/getting-started/fixing-npm-permissions#option-2-change-npms-default-directory-to-another-directory
#
  - name: create Directory for global installation
    file:
      path: ~/.npm-global/lib
      state: directory
      mode: 0755
  - name: set directory of npm
    command: npm config set prefix '~/.npm-global'
  - name: path for global npm
    lineinfile:
      dest: ~/.profile
      line: 'export PATH=~/.npm-global/bin:$PATH'
  - name: source ~/.profile
    shell: source ~/.profile | bash

#
# eslint
#
  - name: Install "eslint" node.js package globally
    npm: name={{ item }} global=yes
    with_items:
      - eslint
      - eslint_d

# randomize screen saver
# TODO: http://applocator.blogspot.com/2017/01/random-screensaver-with-linux-mint.html

#
# dein
#
  - name: dein - checking already installed
    command: test -d ~/.cache/dein
    register: is_dein_installed
    ignore_errors: true
  - name: Print on failed
    debug:
      msg: "nothing found, newly installing dein"
    when: is_dein_installed is failed
  - name: dein - install
    shell: curl https://raw.githubusercontent.com/Shougo/dein.vim/master/bin/installer.sh | sh -s -- ~/.cache/dein
    when: is_dein_installed is failed
  - name: create ~/.vim/colors directory if it doesn't exist
    file:
      path: ~/.vim/colors
      state: directory
      mode: 0755

#
# neovim
#
#
  - name: Create a directory if it does not exist
    file:
      path: ~/.config/nvim/
      state: directory
      mode: '0755'
  - name: Create symbolic link for neovim vimrc
    file:
      src: "~/.vimrc"
      dest: "~/.config/nvim/init.vim"
      state: link
      #https://docs.ansible.com/ansible/latest/collections/ansible/builtin/file_module.html
#
# Onedrive client Install
# https://memo.laughk.org/2016/12/22/0000.html
# https://github.com/skilion/onedrive
#
  - name: onedrive - checking already installed
    command: which onedrive
    register: is_onedrive_installed
    ignore_errors: true
  - name: Print on failed
    debug:
      msg: "nothing found, newly installing onedrive"
    when: is_onedrive_installed is failed
  - name: install packages
    apt:
      name:
        # https://ubuntuforums.org/showthread.php?t=1774516
        - libcurl4-gnutls-dev
        #- libcurl-dev
        - libsqlite3-dev
      state: latest
    become: true
    when: is_onedrive_installed is failed
      #  - name: download for Onedrive
      #    get_url:
      #      url: http://master.dl.sourceforge.net/project/d-apt/files/d-apt.list
      #      dest: /etc/apt/sources.list.d/d-apt.list
      #    become: true
      #  - name: apt-key
      #    shell: apt-key adv --keyserver keyserver.ubuntu.com --recv-keys EBCF975E5BA24D5E
      #    become: true
      #  - name: apt-key add for Onedrive
      #    apt_key:
      #      url: "http://dlang.org/d-keyring.gpg"
      #      state: present
      #    become: true
      #  - name: Run the equivalent of "apt-get update" as a separate step
      #    apt:
      #      update_cache: yes
      #    become: true
      #    when: not ansible_check_mode
  #https://d-apt.sourceforge.io/
  - name: dmd
    shell: wget https://netcologne.dl.sourceforge.net/project/d-apt/files/d-apt.list -O /etc/apt/sources.list.d/d-apt.list
    become: true
    when: is_onedrive_installed is failed
  - name: dmd
    shell: sudo apt-get update --allow-insecure-repositories && sudo apt-get -y --allow-unauthenticated install --reinstall d-apt-keyring && sudo apt-get update
    become: true
    when: is_onedrive_installed is failed
  - name: dmd - install
    apt:
      update_cache: yes
      state: latest
      name:
        - dmd-compiler
        - dmd-tools
    become: true
    when: is_onedrive_installed is failed
  - name: clone Onedrive
    git:
      repo: https://github.com/skilion/onedrive
      dest: /opt/onedrive
    become: true
    when: is_onedrive_installed is failed
  - name: make all
    make:
      chdir: /opt/onedrive
      target: /opt/onedrive/Makefile
    when: is_onedrive_installed is failed
    become: true
  - name: make install
    command: make install
    args:
      chdir: /opt/onedrive
    become: true
    when: is_onedrive_installed is failed
  - name: create ~/.config/onedrive directory if it doesn't exist
    file:
      path: ~/.config/onedrive
      state: directory
      mode: 0755
  - name: copy onedrive.conf
    command: cp /opt/onedrive/config ~/.config/onedrive/config
      #  - name: systemd onedrive enabled
      #    command: systemctl --user enable onedrive
      #  - name: systemd onedrive start
      #    command: systemctl --user start onedrive

#
# rclone
#
  - name: rclone - install
    apt:
      state: latest
      name:
        - rclone
    become: true
    #  - name: rclone install
    #    shell: which rclone || curl https://rclone.org/install.sh | sudo bash
    #    become: true
    #    when: avoid_some is failed
    #TODO: consider to do it through apt, availabe both mint & kali lately

#
# misc Settings
#
  - name: zsh for login shell
    user: name={{ansible_user_id}} shell=/bin/zsh
    become: true
    when: ansible_distribution == 'Linux Mint'

#
# FireWall Settings
# http://linuxbsdos.com/2015/12/07/first-thing-to-do-after-installing-linux-mint-17-3/
#
  - name: start firewalld
    service: name=firewalld state=restarted enabled=yes
    become: true

#
# SSH Settings
#
  - name: Disallow root SSH access
    lineinfile: dest=/etc/ssh/sshd_config
              regexp="^PermitRootLogin"
              line="PermitRootLogin no"
              state=present
    become: true
    #notify: restart ssh
  - name: create ~/.ssh directory if it doesn't exist
    file:
      path: ~/.ssh
      state: directory
      mode: 0755

#
# git configuration
#
  - name: git config username in global
    command: git config --global user.name "{{ gituser }}"
  - name: git config email in global
    command: git config --global user.email "{{ gitemail }}"

#
# Fonts
#
  - name: Fonts for Default
    command: gsettings set org.cinnamon.desktop.interface font-name "{{ font }}"
    when: ansible_distribution == 'Linux Mint'
  - name: Fonts for Desktop
    command: gsettings set org.nemo.desktop font "{{ font }}"
    when: ansible_distribution == 'Linux Mint'
  - name: Fonts for Document
    command: gsettings set org.gnome.desktop.interface document-font-name "{{ font }}"
  - name: Fonts for monospace
    command: gsettings set org.gnome.desktop.interface monospace-font-name "{{ font_monospace }}"
  - name: Fonts for Window Titlebar
    command: gsettings set org.cinnamon.desktop.wm.preferences titlebar-font "{{ font_titlebar }}"
    when: ansible_distribution == 'Linux Mint'

#
# Virtualbox
#
#
  - name: Virtualbox - install
    apt:
      state: latest
      name:
        # https://sites.google.com/site/linuxnomemo/mint-use/virtualbox
        - virtualbox
        - virtualbox-qt
        - virtualbox-dkms
        - virtualbox-guest-additions-iso
    become: true
    when: avoid_some is failed
  - name: add "{{ansible_user_id}}" into group netdev
    user:
      name: "{{ansible_user_id}}"
      groups: vboxusers
      append: yes
    become: true
    when: avoid_some is failed

#
# pip
#
  - name: pip - install general packages
    pip:
      name:
        - pip
        - setuptools
        - csvkit
    become: true
    when: avoid_some is failed

  - name: sitecustomize.py
    blockinfile:
      dest: /etc/python2.7/sitecustomize.py
      insertafter: '^# install the apport exception handler if available'
      content: |
        import sys
        sys.setdefaultencoding('utf-8')
    become: true
    when: avoid_some is failed

#
# mail command settings
#
#  - name: mail utils install
#    apt:
#      name:
#        - mailutils
#        - exim4
#      update_cache: yes
#      state: latest
#    become: true
#  - name: copy exim4 cfg file
#    copy: >
#      src=./src/update-exim4.conf.conf
#      dest=/etc/exim4/update-exim4.conf.conf
#    become: true
#  - shell: update-exim4.conf
#    become: true
# tail -f /var/log/exim4/mainlog

  - name: kvm install packages
    apt:
      name:
        - qemu #https://fosspost.org/tutorials/use-qemu-test-operating-systems-distributions
        - qemu-kvm
        - virt-manager
          #- ppa-purge # https://discourse.roots.io/t/could-not-fetch-updated-apt-files/6254/7
        - bridge-utils
        - libvirt-daemon-system
        - libvirt-clients
      state: latest
    become: true
    when: avoid_some is failed
      #  - name: start libvirt-bin
      #    service: name=libvirt-bin state=restarted enabled=yes
      #    become: true
  #http://acchi-muite-hoi.hatenablog.com/entry/2016/08/18/102709
  - name: add vhost_net to load module
    lineinfile:
      dest: /etc/modules
      line: 'vhost_net'
    become: true
    when: avoid_some is failed
  - name: adduser
    user: >-
      name={{ansible_user_id}}
      groups=root,libvirt,kvm
      append=true
    become: true
    when: avoid_some is failed

      #https://linuxhint.com/install_kvm_virtualization_ubuntu/

# w3m
  - name: create ~/.w3m directory if it doesn't exist
    file:
      path: ~/.w3m
      state: directory

# remove screen reader
# https://askubuntu.com/questions/278693/how-do-i-stop-orca-screen-reader

#
# plantUML
# https://www.hiroom2.com/2018/07/02/ubuntu-1804-plantuml-en/
  - name: install dependencies for PlantUML
    apt:
      name:
        - graphviz
        - default-jre
      state: latest
    become: true
    when: avoid_some is failed
  - name: Creates directory
    file:
      path: /opt/plantuml
      state: directory
    become: true
  - name: check existence of plantuml
    stat: path=/opt/plantuml/plantuml.jar
    register: has_plantml
  - name: download PlantUML
    get_url:
      url: http://sourceforge.net/projects/plantuml/files/plantuml.jar/download
      dest: /opt/plantuml/
      mode: 0555
    become: true
    when: not has_plantml.stat.exists

#
# latex
#
# do it manually for now, because it's time-consuming
#  - command: sudo apt install texlive-full
  - name: install latex(instead of texlive-full)
    apt:
      name:
        - texlive-base
        - texlive-lang-japanese
          #        - texlive-fonts-recommended
      state: latest
    become: true
    when: avoid_some is failed
# https://texwiki.texjp.org/?Linux%2FLinux%20Mint
# https://linuxconfig.org/how-to-install-latex-on-ubuntu-20-04-focal-fossa-linux

#
# mitmdump
#
#consider to migrate the way by apt. Available on latest distros
  - name: install dependencies for mitmproxy
    apt:
      name:
        - python3-dev
        - python3-pip
        - libffi-dev
        - libssl-dev
      state: latest
    become: true
    when: avoid_some is failed

  - name: upgrade pip
    pip:
      name: pip
      executable: pip3
      state: latest
    become: true
    when: avoid_some is failed

  - name: mitmproxy
    command: pip3 install --ignore-installed mitmproxy
    become: true
    when: avoid_some is failed

#
# apt autoclean, autoremove
#
  - name: Remove useless packages from the cache
    apt:
      autoclean: yes
    become: true
  - name: Remove dependencies that are no longer required
    apt:
      autoremove: yes
    become: true

    #  handlers:
    #  - name: restart ssh
    #    service: name=sshd state=restarted
    #    become: true

# todo: add useful tools https://qiita.com/onokatio/items/50fb616f71bf3c5021b9
# todo: apt-fast https://news.mynavi.jp/article/20161101-a177/
#
# memo:
#
#file manager
#[Dark theme in Dolphin file manager](https://unix.stackexchange.com/a/566789)
#dark theme for nemo
#https://forums.linuxmint.com/viewtopic.php?p=1130585#p1130585
#~/.themes/Mint-X-Dark/gtk-3.0/apps
#
#note
#systemctl --user restart pulseaudio.service
#https://askubuntu.com/a/1123869
#

#transfer host repo to guest for development
#scp -r -P 47122 ~/Documents/pde mint@localhost:/tmp/
#port may vary
#
#https://stackoverflow.com/questions/34333058/ansible-change-ssh-port-in-playbook

#https://stackoverflow.com/a/60301387
#ansible-playbook --extra-vars "ansible_sudo_pass=UNDEFINED" install.yml

#It starts from host which has ansible 2.9.16,python2.7.12 Mint18.3
#ansible-playbook -u mint -e target=localguest --extra-vars "ansible_sudo_pass=UNDEFINED" -i hosts  install.yml
#but following error
#
# ____________________
#< TASK [upgrade pip] >
# --------------------
#        \   ^__^
#         \  (oo)\_______
#            (__)\       )\/\
#                ||----w |
#                ||     ||
#
#An exception occurred during task execution. To see the full traceback, use -vvv. The error was: ImportError: No module named pkg_resources
#fatal: [localhost]: FAILED! => {"changed": false, "msg": "Failed to import the required Python library (setuptools) on mint-Standard-PC-i440FX-PIIX-1996's Python /usr/bin/python2.7. Please read module documentation and install in the appropriate location. If the required library is installed, but Ansible is using the wrong Python interpreter, please consult the documentation on ansible_python_interpreter"}
#
#restart monitor
#https://askubuntu.com/questions/143838/how-do-i-restart-cinnamon-from-the-tty
#
#preinstall packages for time saving in develop
#sudo apt install -y 
#https://stackoverflow.com/questions/27305177/how-can-i-remove-the-last-character-of-a-file-in-unix
#cat debian/preinstallpacks.txt | sed -e 's/ *-//g' | sed -e 's/$/ \\/g' | sed '$ s/.$//'
#cat debian/preinstallpacks.txt | sed -e 's/^ \+-//g' | tr -d '\n'
#consider automate to generate preinstallpacks.txt like #<!--preinstall-dev [some-packs...] -->
#
#for 2nd invocation;
#ansible-playbook /tmp/pde/debian/install.yml -K --connection=local
