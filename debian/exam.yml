---
- hosts: "{{ target | default('localhost') }}"
  vars:
    downloads: /home/{{ansible_user_id}}/Downloads
  become: no
  tasks:

  #https://docs.ansible.com/ansible/latest/user_guide/playbooks_conditionals.html
  - name: Check
    command: cat /etc/issue
    register: etc_issue
    ignore_errors: true
    args:
      chdir: ~/
    become: yes

  - name: Print on succeeded
    debug:
      msg: "{{ etc_issue.stdout }}"
    when: etc_issue is succeeded

  - name: Print on failed
    debug:
      msg: "nothing found"
    when: etc_issue is failed

  #ansible-playbook -u mint -e target=localguest --extra-vars "ansible_sudo_pass=UNDEFINED" -i hosts  exam.yml
  - name: Print how re-run playbook for handy
    debug:
      msg: "ansible-playbook {{playbook_dir}}/exam.yml --connection=local --extra-vars 'ansible_sudo_pass=UNDEFINED'"

  #
  # Set timezone
  #
  #On GUI, it accepts 'Japan' though
  #https://docs.ansible.com/ansible/2.3/timezone_module.html
  - name: set timezone to Asia/Tokyo
    timezone:
      name: Asia/Tokyo
    become: yes


  #
  # Startup apps on boot
  #
    #https://superuser.com/a/1253718
    #https://wiki.archlinux.org/index.php/systemd#Basic_systemctl_usage
    #https://askubuntu.com/questions/903354/difference-between-systemctl-and-service-commands
    #- name: copy scrpts to /opt
    #  copy: >
    #    src=./system/
    #    dest=/etc/systemd/system
    #    mode=777
    #  become: true
  - name: autostart - Create a directory if it does not exist
    file:
      path: ~/.config/autostart
      state: directory
      mode: '0755'
  - name: autostart - copy scrpts to autostart
    copy: >
      src=./autostart/
      dest=~/.config/autostart
      mode=777
  - name: Ensure ~/.local/share/applications/
    file:
      path: ~/.local/share/applications
      state: directory
      mode: '0755'
  - name: autostart - create simlink to ~/.local/share/applications
    shell: 'd=~/.config/autostart; ls $d | xargs -I{} ln -s $d/{} ~/.local/share/applications/{}'
    ignore_errors: true

  #
  # Slimblade Trackball
  #
  # Packages for the device
  - name: Device - Slimblade Trackball - Packages
    apt:
      state: latest
      name:
        - xinput #https://unix.stackexchange.com/questions/453069/configuring-kensington-slimblade-in-linux
    become: true
  - name: Device - Slimblade Trackball - Create a directory if it does not exist
    file:
      path: /opt/trackball
      state: directory
      mode: '0755'
    become: true
  - name: Device - Slimblade Trackball - copy scrpts to /opt/trackball
    copy: >
      src=./devices/trackball/trackball.sh
      dest=/opt/trackball
      mode=755
    become: true
  - name: Device - Slimblade Trackball - copy scrpts to /opt/trackball
    copy: >
      src=./devices/trackball/trackballw.sh
      dest=/opt/trackball
      mode=755
    become: true
    #- name: Device - Slimblade Trackball - Make sure a service is running
    #  systemd:
    #    state: restarted
    #    enabled: yes
    #    name: trackball
    #  become: true

  #
  # Griffin Powermate
  #
  - name: Device - Griffin Powermate - Create a directory if it does not exist
    file:
      path: /opt/powermate
      state: directory
      mode: '0755'
    become: true
  - name: Device - Griffin Powermate - copy scrpts to /opt/powermate
    copy: >
      src=./devices/powermate/
      dest=/opt/powermate
      mode=755
    become: true
  - name: Device - Griffin Powermate - Invoke command 1st time for bootstrapping
    command: /opt/powermate/powermate.sh
    become: true
    ignore_errors: true
    #- name: Device - Griffin Powermate - Make sure a service is running
    #  systemd:
    #    #state: started
    #    enabled: yes
    #    name: powermate
    #  become: true

