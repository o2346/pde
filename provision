#!/bin/bash

whatplatform () {
  cat /etc/issue | grep -i 'mint' > /dev/null && echo debian && return 0
  cat /etc/issue | grep -i 'kali' > /dev/null && echo debian && return 0

  if [ "$(uname)" = "Darwin" ]; then
    # Do something under Mac OS X platform
    echo "darwin"
  elif [ "$(expr substr $(uname -s) 1 10)" = "MINGW32_NT" ]; then
    # Do something under Windows NT platform
    return "$(expr substr $(uname -s) 1 10)"
  fi
}

vmx() {
  echo "[Hypervisor Detection] $1 is the one virtualizes this machine. proceeding..."
  sh /tmp/pde/`whatplatform`/guest/vmware.sh
}

vbox() {
  echo "[Hypervisor Detection] $1 is the one virtualizes this machine. proceeding..."
  sh /tmp/pde/`whatplatform`/guest/virtualbox.sh
}

vmopt() {
  HYPERV=`sudo dmidecode -s system-product-name`

  if [ "$HYPERV" = "VirtualBox" ]; then
    vbox $HYPERV
    return 0
  fi

  if [ "$HYPERV" = "VMware Virtual Platform" ]; then
    vmx $HYPERV
    return 0
  fi

  echo "[ERROR] This machine likely has none of Hypervisor. abort"
  return 1

}

preinstall_apt() {

  if [ -z `which ansible` ]; then
    #export DEBIAN_FRONTEND=noninteractive
    #sudo apt update                       &&
    #sudo apt                               \
    #  -o Dpkg::Options::="--force-confdef" \
    #  -o Dpkg::Options::="--force-confold" \
    #-yq dist-upgrade
    #https://askubuntu.com/a/734871

    #sudo apt install -y software-properties-common

    #It causes error later apt update in kali
    #sudo apt-add-repository ppa:ansible/ansible

    sudo apt search ansible | grep ansible || sudo apt update
    sudo apt install -y ansible
    sudo chown -R -v $USER ~/.ansible
  fi

  which git || sudo apt install -y git

}

preinstall_dnf() {
  :
}

preinstall_brew() {

  if [ -z `which brew` ]; then
    # appleid required beforhand
    # is this better?
    xcode-select --install
    sudo xcodebuild -license
    ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
    brew update
  fi
  if [ -z `which ansible` ]; then
    brew install ansible
  fi
  if [ -z `which git` ]; then
    brew install git
  fi

}

preinstall() {
  if [ "$(uname)" = "Darwin" ]; then
    echo "preinstall for macos"
    preinstall_brew
  elif which apt 2>/dev/null; then
    # Do something under GNU/Linux platform
    preinstall_apt
  elif which dnf 2>/dev/null; then
    # Do something under GNU/Linux platform
    preinstall_dnf
  fi
}

OSDIR=`whatplatform`
USER=`whoami`

echo "$OSDIR"
echo "$USER"


# Better to be separated context from below
#  echo Virtual Machine Optimization mode OSDIR=$OSDIR
#    vmopt
#    exit 0
#    ;;

#for testing local repo for handy: ln -s ~/Documents/pde /tmp/pde

preinstall
cd /tmp
test -d /tmp/pde || git clone https://github.com/o2346/pde
cd /tmp/pde
playbook="$(realpath $OSDIR/install.yml)"
branch=master
check=''

while getopts "dep:CS" OPT ; do
  case $OPT in
    d)
        branch=develop
        ;;
    e)
        branch=develop
        playbook="$(realpath $OSDIR/exam.yml)"
        ;;
    p)
        branch=develop
        playbook="$(dirname $(mktemp -u))/partial.yml"
        cat ./$OSDIR/install.yml | ./$OSDIR/partialize.sh $OPTARG > $playbook
        ;;
    S)
        syntax_check_only=0
        ;;
    C)
        check='--check'
        ;;
#    v)  echo Branch: Develop OSDIR=$OSDIR
#        echo 'Set up target host vulnerable for handy'
#        git checkout develop
#        git pull --ff-only
#        cd /tmp/pde/$OSDIR
#        ./vulnerable.sh
#        exit 0
#        ;;
    *)
        ;;
  esac
done

ansible-playbook $playbook --syntax-check || exit 1
if [ "$syntax_check_only" = 0 ]; then
  cat $playbook
  exit 0
fi

echo $check

if [ "$#" = 0 ]; then
  echo "Provisioning by master branch" >&2
  git checkout master
  git pull --ff-only
  cd /tmp/pde/$OSDIR
  ansible-playbook $check install.yml -kK --connection=local
  exit $?
else
  echo "Provisioning by $branch branch" >&2
  echo $playbook
  git checkout $branch
  git pull --ff-only
  cd /tmp/pde/$OSDIR
  ansible-playbook $check $playbook -kK --connection=local
  exit $?
fi
